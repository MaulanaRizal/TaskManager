

@{
    ViewData["Title"] = "Home Page";
    int numberRow = 0;
}
@section Styles{
    <style>
        .card{
            background-color:white;
        }

        .badge-completed{
            background-color:#ffc107;
        }

        .badge-pending{
            background-color:#6c757d;
        }

        .badge-inprogress{
            background-color:#007bff;
        }

        .modal-dialog{
            margin: 200px auto;
        }
    </style>
}
<div class="container">
    <div class="card">
        <div class="card-body">
            <h3>Task Manager</h3>
            <p>Task data collection table here each row represents an individual task, and columns display various attributes or properties of the tasks.</p>
            <hr />
                    
            @if(Model.Status == "Failed")
            {
                <div class="alert alert-danger" role="alert">
                  Oh no!, @(Model.Message)
                </div>
                
            }
            
            @if(TempData["Success"] != null)
            {
                <div class="alert alert-success" role="alert">
                  @TempData["Success"]
                </div>
            }
                        
            @if(TempData["Failed"] != null)
            {
                <div class="alert alert-danger" role="alert">
                  @TempData["Failed"]
                </div>
            }

            @if (Model.Status == "Success")
            {
                            
                <div class="col-md-4 float-end mb-3">
                    <div class="input-group ">
                      <input type="text" class="form-control" placeholder="Search Task..." >
                      <button class="btn btn-outline-secondary" type="button">Search</button>
                      <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#addTask">Add</button>
                    </div>
                </div>



                <table class="table">
                  <thead>
                    <tr>
                      <th scope="col">#</th>
                      <th scope="col">Title</th>
                      <th scope="col">Status</th>
                      <th scope="col">Description</th>
                    </tr>
                  </thead>
                  <tbody>
                    
                    @foreach(var Task in Model.Tasks)
                    {
                        <tr>
                          <th scope="row">@(++numberRow)</th>
                          <td width='200px'>
                              <span>@Task.title</span><br>
                              <span class="small"><a href=# id="taskEdit-@Task.id" onclick="updateTask(@Task.id)" data-bs-toggle="modal" data-bs-target="#editTask">Edit</a></span> |
                              <span class="small"><a href=# id="taskDelete-@Task.id" onclick="deleteTask(@Task.id,'@Task.title')" data-bs-toggle="modal" data-bs-target="#deleteTask">Delete</a></span>
                          </td>
                          <td>
                              @if(@Task.status.ToString() == "Completed"){
                                <span class="badge badge-completed">Completed</span>
                              }else if(@Task.status.ToString() == "InProgress"){
                                <span class="badge badge-pending">In 
                                    Progress</span>
                              }else if(@Task.status.ToString() == "Pending"){
                                <span class="badge badge-inprogress">Pending</span>
                              }
                          </td>
                          <td >
                              <p style="max-height: 100px;overflow-y: auto;">@Task.description</p>
                          </td>
                        </tr>
                    }

                  </tbody>
                </table>
                
            }
                        
            <!-- Modal Input -->
                <div class="modal fade" id="addTask" tabindex="-1" aria-hidden="true">
                        @await Component.InvokeAsync("ModalInput")
                </div>

            <!-- Modal Delete -->
                <div class="modal fade" id="deleteTask" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Delete Task</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p id="bodyContext"></p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <a id="linkDelete" href="#" class="btn btn-danger">Delete</a>
                            </div>
                        </div>
                    </div>
                </div>
                                
            <!-- Modal Edit -->
                <div class="modal fade" id="editTask" tabindex="-1" aria-hidden="true">
                    @await Component.InvokeAsync("ModalUpdate")
                </div>
                         

            <nav>
              <ul class="pagination justify-content-end">
                <li class="page-item disabled">
                  <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                  <a class="page-link" href="/Home/Delete/">Next</a>
                </li>
              </ul>
            </nav>
        </div>
    </div>

</div>

@section Scripts{
    <script>
        $('.alert').delay(5000).fadeOut();

        function deleteTask(id,title){
            $('#bodyContext').text(`Are you sure delete task ${title}?`)
            $('#linkDelete').attr("href",`/home/delete/${id}`)
        }
            
        function updateTask(id){
        $.ajax({
            url : `/home/update/${id}`,
            method : 'GET',
            success : function(data){
                console.log(data)

                if(data.status == "success"){
                    const task = data.task;
                    $('#updateForm').attr('action',`/Home/Update/${task.id}`);
                    $('#titleUpdate').val(task.title);
                    $('#statusUpdate').val(task.status);
                    $('#descriptionUpdate').val(task.description);
                }

                if(data.status == "failed"){
                    const alert = `<div class="alert alert-danger" role="alert" id=updateAlertDanger>${data.message}</div>`
                    
                    $('#updateAlertDanger').html(alert)
                    $('.alert').delay(5000).fadeOut();
                }

            }
        })
    }



    </script>
}